import { ContextMenuConfig } from './context-menu-config';
import { ContextMenuAction, ContextMenuDivider } from './context-menu-item';
var ContextMenuConfigBuilder = /** @class */ (function () {
    function ContextMenuConfigBuilder() {
        this.config = new ContextMenuConfig();
    }
    /**
     * @param {?} pageX
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.left = function (pageX) {
        this.config.left = pageX;
        return this;
    };
    /**
     * @param {?} pageY
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.top = function (pageY) {
        this.config.top = pageY;
        return this;
    };
    /**
     * @param {?} text
     * @param {?} click
     * @param {?=} disabled
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.addAction = function (text, click, disabled) {
        this.config.items.push(new ContextMenuAction(text, click, disabled));
        return this;
    };
    /**
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.addDivider = function () {
        this.config.items.push(new ContextMenuDivider());
        return this;
    };
    /**
     * @param {...?} items
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.addItems = function () {
        var items = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            items[_i] = arguments[_i];
        }
        (_a = this.config.items).push.apply(_a, items);
        return this;
        var _a;
    };
    /**
     * @param {?} context
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.context = function (context) {
        this.config.context = context;
        return this;
    };
    /**
     * @return {?}
     */
    ContextMenuConfigBuilder.prototype.build = function () {
        return this.config;
    };
    return ContextMenuConfigBuilder;
}());
export { ContextMenuConfigBuilder };
function ContextMenuConfigBuilder_tsickle_Closure_declarations() {
    /** @type {?} */
    ContextMenuConfigBuilder.prototype.config;
}
