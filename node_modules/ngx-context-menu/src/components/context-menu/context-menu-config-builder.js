import { ContextMenuConfig } from './context-menu-config';
import { ContextMenuAction, ContextMenuDivider } from './context-menu-item';
export class ContextMenuConfigBuilder {
    constructor() {
        this.config = new ContextMenuConfig();
    }
    /**
     * @param {?} pageX
     * @return {?}
     */
    left(pageX) {
        this.config.left = pageX;
        return this;
    }
    /**
     * @param {?} pageY
     * @return {?}
     */
    top(pageY) {
        this.config.top = pageY;
        return this;
    }
    /**
     * @param {?} text
     * @param {?} click
     * @param {?=} disabled
     * @return {?}
     */
    addAction(text, click, disabled) {
        this.config.items.push(new ContextMenuAction(text, click, disabled));
        return this;
    }
    /**
     * @return {?}
     */
    addDivider() {
        this.config.items.push(new ContextMenuDivider());
        return this;
    }
    /**
     * @param {...?} items
     * @return {?}
     */
    addItems(...items) {
        this.config.items.push(...items);
        return this;
    }
    /**
     * @param {?} context
     * @return {?}
     */
    context(context) {
        this.config.context = context;
        return this;
    }
    /**
     * @return {?}
     */
    build() {
        return this.config;
    }
}
function ContextMenuConfigBuilder_tsickle_Closure_declarations() {
    /** @type {?} */
    ContextMenuConfigBuilder.prototype.config;
}
