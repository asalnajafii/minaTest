/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
/**
 * @abstract
 */
var FieldType = /** @class */ (function () {
    function FieldType() {
    }
    Object.defineProperty(FieldType.prototype, "model", {
        get: /**
         * @return {?}
         */
        function () { return this.field.model; },
        set: /**
         * @param {?} m
         * @return {?}
         */
        function (m) { console.warn("NgxFormly: passing 'model' input to '" + this.constructor.name + "' component is not required anymore, you may remove it!"); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "key", {
        get: /**
         * @return {?}
         */
        function () { return this.field.key; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "formControl", {
        get: /**
         * @return {?}
         */
        function () { return this.field.formControl; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "to", {
        get: /**
         * @return {?}
         */
        function () { return this.field.templateOptions; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "showError", {
        get: /**
         * @return {?}
         */
        function () { return this.options.showError(this); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "id", {
        get: /**
         * @return {?}
         */
        function () { return this.field.id; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FieldType.prototype, "formState", {
        get: /**
         * @return {?}
         */
        function () { return this.options.formState || {}; },
        enumerable: true,
        configurable: true
    });
    FieldType.propDecorators = {
        form: [{ type: Input }],
        field: [{ type: Input }],
        options: [{ type: Input }],
        model: [{ type: Input }]
    };
    return FieldType;
}());
export { FieldType };
if (false) {
    /** @type {?} */
    FieldType.prototype.form;
    /** @type {?} */
    FieldType.prototype.field;
    /** @type {?} */
    FieldType.prototype.options;
}
/**
 * @deprecated use `FieldType` instead
 * @abstract
 */
var /**
 * @deprecated use `FieldType` instead
 * @abstract
 */
Field = /** @class */ (function (_super) {
    tslib_1.__extends(Field, _super);
    function Field() {
        var _this = _super.call(this) || this;
        console.warn("NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.");
        return _this;
    }
    return Field;
}(FieldType));
/**
 * @deprecated use `FieldType` instead
 * @abstract
 */
export { Field };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQudHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtZm9ybWx5L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdGVtcGxhdGVzL2ZpZWxkLnR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxTQUFTLEVBQW1CLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7SUFRMUQsc0JBQ0ksNEJBQUs7Ozs7UUFEVCxjQUNjLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFOzs7OztRQUN4QyxVQUFVLENBQU0sSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLDBDQUF3QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksNERBQXlELENBQUMsQ0FBQyxFQUFFOzs7T0FEbkg7SUFHeEMsc0JBQUksMEJBQUc7Ozs7UUFBUCxjQUFZLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFOzs7T0FBQTtJQUVwQyxzQkFBSSxrQ0FBVzs7OztRQUFmLGNBQXFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUFFOzs7T0FBQTtJQUVyRSxzQkFBSSx5QkFBRTs7OztRQUFOLGNBQWtDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxFQUFFOzs7T0FBQTtJQUV0RSxzQkFBSSxnQ0FBUzs7OztRQUFiLGNBQTJCLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFOzs7T0FBQTtJQUVqRSxzQkFBSSx5QkFBRTs7OztRQUFOLGNBQW1CLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUFFOzs7T0FBQTtJQUUxQyxzQkFBSSxnQ0FBUzs7OztRQUFiLGNBQWtCLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsRUFBRTs7O09BQUE7O3VCQWxCdkQsS0FBSzt3QkFDTCxLQUFLOzBCQUNMLEtBQUs7d0JBRUwsS0FBSzs7b0JBVFI7O1NBSXVCLFNBQVM7Ozs7Ozs7Ozs7Ozs7QUF5QmhDOzs7O0FBQUE7SUFBb0MsaUNBQVM7SUFDM0M7UUFBQSxZQUNFLGlCQUFPLFNBRVI7UUFEQyxPQUFPLENBQUMsSUFBSSxDQUFDLGlGQUFpRixDQUFDLENBQUM7O0tBQ2pHO2dCQWpDSDtFQTZCb0MsU0FBUyxFQUs1QyxDQUFBOzs7OztBQUxELGlCQUtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCwgQWJzdHJhY3RDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRm9ybWx5VGVtcGxhdGVPcHRpb25zLCBGb3JtbHlGaWVsZENvbmZpZywgRm9ybWx5Rm9ybU9wdGlvbnMgfSBmcm9tICcuLi9jb21wb25lbnRzL2Zvcm1seS5maWVsZC5jb25maWcnO1xuXG4gZXhwb3J0IGFic3RyYWN0IGNsYXNzIEZpZWxkVHlwZSB7XG4gIEBJbnB1dCgpIGZvcm06IEZvcm1Hcm91cDtcbiAgQElucHV0KCkgZmllbGQ6IEZvcm1seUZpZWxkQ29uZmlnO1xuICBASW5wdXQoKSBvcHRpb25zOiBGb3JtbHlGb3JtT3B0aW9ucztcblxuICBASW5wdXQoKVxuICBnZXQgbW9kZWwoKSB7IHJldHVybiB0aGlzLmZpZWxkLm1vZGVsOyB9XG4gIHNldCBtb2RlbChtOiBhbnkpIHsgY29uc29sZS53YXJuKGBOZ3hGb3JtbHk6IHBhc3NpbmcgJ21vZGVsJyBpbnB1dCB0byAnJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9JyBjb21wb25lbnQgaXMgbm90IHJlcXVpcmVkIGFueW1vcmUsIHlvdSBtYXkgcmVtb3ZlIGl0IWApOyB9XG5cbiAgZ2V0IGtleSgpIHsgcmV0dXJuIHRoaXMuZmllbGQua2V5OyB9XG5cbiAgZ2V0IGZvcm1Db250cm9sKCk6IEFic3RyYWN0Q29udHJvbCB7IHJldHVybiB0aGlzLmZpZWxkLmZvcm1Db250cm9sOyB9XG5cbiAgZ2V0IHRvKCk6IEZvcm1seVRlbXBsYXRlT3B0aW9ucyB7IHJldHVybiB0aGlzLmZpZWxkLnRlbXBsYXRlT3B0aW9uczsgfVxuXG4gIGdldCBzaG93RXJyb3IoKTogYm9vbGVhbiB7IHJldHVybiB0aGlzLm9wdGlvbnMuc2hvd0Vycm9yKHRoaXMpOyB9XG5cbiAgZ2V0IGlkKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLmZpZWxkLmlkOyB9XG5cbiAgZ2V0IGZvcm1TdGF0ZSgpIHsgcmV0dXJuIHRoaXMub3B0aW9ucy5mb3JtU3RhdGUgfHwge307IH1cbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZCB1c2UgYEZpZWxkVHlwZWAgaW5zdGVhZFxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRmllbGQgZXh0ZW5kcyBGaWVsZFR5cGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIGNvbnNvbGUud2FybihgTmd4Rm9ybWx5OiAnRmllbGQnIGhhcyBiZWVuIHJlbmFtZWQgdG8gJ0ZpZWxkVHlwZScsIGV4dGVuZCAnRmllbGRUeXBlJyBpbnN0ZWFkLmApO1xuICB9XG59XG4iXX0=