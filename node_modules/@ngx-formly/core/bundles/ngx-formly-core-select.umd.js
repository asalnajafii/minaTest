(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@ngx-formly/core/select', ['exports', '@angular/core', 'rxjs', 'rxjs/operators'], factory) :
    (factory((global['ngx-formly'] = global['ngx-formly'] || {}, global['ngx-formly'].core = global['ngx-formly'].core || {}, global['ngx-formly'].core.select = {}),global.ng.core,global.rxjs,global.rxjs.operators));
}(this, (function (exports,core,rxjs,operators) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var FormlySelectOptionsPipe = (function () {
        function FormlySelectOptionsPipe() {
        }
        /**
         * @param {?} options
         * @param {?=} field
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.transform = /**
         * @param {?} options
         * @param {?=} field
         * @return {?}
         */
            function (options, field) {
                var _this = this;
                if (!(options instanceof rxjs.Observable)) {
                    options = rxjs.of(options);
                }
                return ((options)).pipe(operators.map(function (value) { return _this.toOptions(value, field || {}); }));
            };
        /**
         * @param {?} options
         * @param {?} field
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.toOptions = /**
         * @param {?} options
         * @param {?} field
         * @return {?}
         */
            function (options, field) {
                var _this = this;
                /** @type {?} */
                var gOptions = [];
                /** @type {?} */
                var groups = {};
                /** @type {?} */
                var to = field.templateOptions || {};
                options.map(function (option) {
                    if (!_this.getGroupProp(option, to)) {
                        gOptions.push(_this.toOption(option, to));
                    }
                    else {
                        if (!groups[_this.getGroupProp(option, to)]) {
                            groups[_this.getGroupProp(option, to)] = [];
                            gOptions.push({
                                label: _this.getGroupProp(option, to),
                                group: groups[_this.getGroupProp(option, to)],
                            });
                        }
                        groups[_this.getGroupProp(option, to)].push(_this.toOption(option, to));
                    }
                });
                return gOptions;
            };
        /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.toOption = /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
            function (item, to) {
                return {
                    label: this.getLabelProp(item, to),
                    value: this.getValueProp(item, to),
                };
            };
        /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.getLabelProp = /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
            function (item, to) {
                if (typeof to.labelProp === 'function') {
                    return to.labelProp(item);
                }
                if (this.shouldUseLegacyOption(item, to)) {
                    return item.value;
                }
                return item[to.labelProp || 'label'];
            };
        /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.getValueProp = /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
            function (item, to) {
                if (typeof to.valueProp === 'function') {
                    return to.valueProp(item);
                }
                if (this.shouldUseLegacyOption(item, to)) {
                    return item.key;
                }
                return item[to.valueProp || 'value'];
            };
        /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.getGroupProp = /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
            function (item, to) {
                if (typeof to.groupProp === 'function') {
                    return to.groupProp(item);
                }
                return item[to.groupProp || 'group'];
            };
        /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
        FormlySelectOptionsPipe.prototype.shouldUseLegacyOption = /**
         * @param {?} item
         * @param {?} to
         * @return {?}
         */
            function (item, to) {
                return !to.valueProp
                    && !to.labelProp
                    && item != null
                    && typeof item === 'object'
                    && 'key' in item
                    && 'value' in item;
            };
        FormlySelectOptionsPipe.decorators = [
            { type: core.Pipe, args: [{ name: 'formlySelectOptions' },] },
        ];
        return FormlySelectOptionsPipe;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */
    var FormlySelectModule = (function () {
        function FormlySelectModule() {
        }
        FormlySelectModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FormlySelectOptionsPipe],
                        exports: [FormlySelectOptionsPipe],
                    },] },
        ];
        return FormlySelectModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
     */

    exports.FormlySelectModule = FormlySelectModule;
    exports.Éµa = FormlySelectOptionsPipe;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWZvcm1seS1jb3JlLXNlbGVjdC51bWQuanMubWFwIiwic291cmNlcyI6WyJuZzovL0BuZ3gtZm9ybWx5L2NvcmUvc2VsZWN0L3NlbGVjdC1vcHRpb25zLnBpcGUudHMiLCJuZzovL0BuZ3gtZm9ybWx5L2NvcmUvc2VsZWN0L3NlbGVjdC5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgYXMgb2JzZXJ2YWJsZU9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBGb3JtbHlGaWVsZENvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5AUGlwZSh7IG5hbWU6ICdmb3JtbHlTZWxlY3RPcHRpb25zJyB9KVxuZXhwb3J0IGNsYXNzIEZvcm1seVNlbGVjdE9wdGlvbnNQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIHRyYW5zZm9ybShvcHRpb25zLCBmaWVsZD86IEZvcm1seUZpZWxkQ29uZmlnKSB7XG4gICAgaWYgKCEob3B0aW9ucyBpbnN0YW5jZW9mIE9ic2VydmFibGUpKSB7XG4gICAgICBvcHRpb25zID0gb2JzZXJ2YWJsZU9mKG9wdGlvbnMpO1xuICAgIH1cblxuICAgIHJldHVybiAob3B0aW9ucyBhcyBPYnNlcnZhYmxlPGFueT4pLnBpcGUoXG4gICAgICBtYXAodmFsdWUgPT4gdGhpcy50b09wdGlvbnModmFsdWUsIGZpZWxkIHx8IHt9KSksXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgdG9PcHRpb25zKG9wdGlvbnMsIGZpZWxkOiBGb3JtbHlGaWVsZENvbmZpZykge1xuICAgIGNvbnN0IGdPcHRpb25zOiBhbnlbXSA9IFtdLFxuICAgICAgZ3JvdXBzOiB7IFtrZXk6IHN0cmluZ106IGFueVtdIH0gPSB7fSxcbiAgICAgIHRvID0gZmllbGQudGVtcGxhdGVPcHRpb25zIHx8IHt9O1xuXG4gICAgb3B0aW9ucy5tYXAoKG9wdGlvbjogYW55KSA9PiB7XG4gICAgICBpZiAoIXRoaXMuZ2V0R3JvdXBQcm9wKG9wdGlvbiwgdG8pKSB7XG4gICAgICAgIGdPcHRpb25zLnB1c2godGhpcy50b09wdGlvbihvcHRpb24sIHRvKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIWdyb3Vwc1t0aGlzLmdldEdyb3VwUHJvcChvcHRpb24sIHRvKV0pIHtcbiAgICAgICAgICBncm91cHNbdGhpcy5nZXRHcm91cFByb3Aob3B0aW9uLCB0byldID0gW107XG4gICAgICAgICAgZ09wdGlvbnMucHVzaCh7XG4gICAgICAgICAgICBsYWJlbDogdGhpcy5nZXRHcm91cFByb3Aob3B0aW9uLCB0byksXG4gICAgICAgICAgICBncm91cDogZ3JvdXBzW3RoaXMuZ2V0R3JvdXBQcm9wKG9wdGlvbiwgdG8pXSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBncm91cHNbdGhpcy5nZXRHcm91cFByb3Aob3B0aW9uLCB0byldLnB1c2godGhpcy50b09wdGlvbihvcHRpb24sIHRvKSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZ09wdGlvbnM7XG4gIH1cblxuICBwcml2YXRlIHRvT3B0aW9uKGl0ZW0sIHRvKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxhYmVsOiB0aGlzLmdldExhYmVsUHJvcChpdGVtLCB0byksXG4gICAgICB2YWx1ZTogdGhpcy5nZXRWYWx1ZVByb3AoaXRlbSwgdG8pLFxuICAgIH07XG4gIH1cblxuICBwcml2YXRlIGdldExhYmVsUHJvcChpdGVtLCB0byk6IHN0cmluZyB7XG4gICAgaWYgKHR5cGVvZiB0by5sYWJlbFByb3AgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0by5sYWJlbFByb3AoaXRlbSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2hvdWxkVXNlTGVnYWN5T3B0aW9uKGl0ZW0sIHRvKSkge1xuICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGl0ZW1bdG8ubGFiZWxQcm9wIHx8ICdsYWJlbCddO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRWYWx1ZVByb3AoaXRlbSwgdG8pOiBzdHJpbmcge1xuICAgIGlmICh0eXBlb2YgdG8udmFsdWVQcm9wID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gdG8udmFsdWVQcm9wKGl0ZW0pO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnNob3VsZFVzZUxlZ2FjeU9wdGlvbihpdGVtLCB0bykpIHtcbiAgICAgIHJldHVybiBpdGVtLmtleTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXRlbVt0by52YWx1ZVByb3AgfHwgJ3ZhbHVlJ107XG4gIH1cblxuICBwcml2YXRlIGdldEdyb3VwUHJvcChpdGVtLCB0byk6IHN0cmluZyB7XG4gICAgaWYgKHR5cGVvZiB0by5ncm91cFByb3AgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB0by5ncm91cFByb3AoaXRlbSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGl0ZW1bdG8uZ3JvdXBQcm9wIHx8ICdncm91cCddO1xuICB9XG5cbiAgcHJpdmF0ZSBzaG91bGRVc2VMZWdhY3lPcHRpb24oaXRlbSwgdG8pIHtcbiAgICByZXR1cm4gIXRvLnZhbHVlUHJvcFxuICAgICAgJiYgIXRvLmxhYmVsUHJvcFxuICAgICAgJiYgaXRlbSAhPSBudWxsXG4gICAgICAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCdcbiAgICAgICYmICdrZXknIGluIGl0ZW1cbiAgICAgICYmICd2YWx1ZScgaW4gaXRlbTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1seVNlbGVjdE9wdGlvbnNQaXBlIH0gZnJvbSAnLi9zZWxlY3Qtb3B0aW9ucy5waXBlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbRm9ybWx5U2VsZWN0T3B0aW9uc1BpcGVdLFxuICBleHBvcnRzOiBbRm9ybWx5U2VsZWN0T3B0aW9uc1BpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlTZWxlY3RNb2R1bGUgeyB9XG4iXSwibmFtZXMiOlsiT2JzZXJ2YWJsZSIsIm9ic2VydmFibGVPZiIsIm1hcCIsIlBpcGUiLCJOZ01vZHVsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7OztRQU9FLDJDQUFTOzs7OztZQUFULFVBQVUsT0FBTyxFQUFFLEtBQXlCO2dCQUE1QyxpQkFRQztnQkFQQyxJQUFJLEVBQUUsT0FBTyxZQUFZQSxlQUFVLENBQUMsRUFBRTtvQkFDcEMsT0FBTyxHQUFHQyxPQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQ2pDO2dCQUVELE9BQU8sRUFBQyxPQUEwQixHQUFFLElBQUksQ0FDdENDLGFBQUcsQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLEtBQUssSUFBSSxFQUFFLENBQUMsR0FBQSxDQUFDLENBQ2pELENBQUM7YUFDSDs7Ozs7O1FBRU8sMkNBQVM7Ozs7O3NCQUFDLE9BQU8sRUFBRSxLQUF3Qjs7O2dCQUNqRCxJQUFNLFFBQVEsR0FBVSxFQUFFLENBRVM7O2dCQUZuQyxJQUNFLE1BQU0sR0FBNkIsRUFBRSxDQUNKOztnQkFGbkMsSUFFRSxFQUFFLEdBQUcsS0FBSyxDQUFDLGVBQWUsSUFBSSxFQUFFLENBQUM7Z0JBRW5DLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQyxNQUFXO29CQUN0QixJQUFJLENBQUMsS0FBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7d0JBQ2xDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztxQkFDMUM7eUJBQU07d0JBQ0wsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMs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