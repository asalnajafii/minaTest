{"version":3,"file":"ngx-formly-core.umd.js.map","sources":[null,"ng://@ngx-formly/core/lib/utils.ts","ng://@ngx-formly/core/lib/services/formly.config.ts","ng://@ngx-formly/core/lib/services/formly.form.builder.ts","ng://@ngx-formly/core/lib/components/formly.form.ts","ng://@ngx-formly/core/lib/components/formly.field.ts","ng://@ngx-formly/core/lib/components/formly.attributes.ts","ng://@ngx-formly/core/lib/templates/field.type.ts","ng://@ngx-formly/core/lib/templates/field-array.type.ts","ng://@ngx-formly/core/lib/templates/field.wrapper.ts","ng://@ngx-formly/core/lib/components/formly.group.ts","ng://@ngx-formly/core/lib/templates/formly.validation-message.ts","ng://@ngx-formly/core/lib/extensions/field-expression/utils.ts","ng://@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","ng://@ngx-formly/core/lib/templates/field-template.type.ts","ng://@ngx-formly/core/lib/core.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { FormlyFieldConfig } from './core';\nimport { Observable } from 'rxjs';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) type = 'template';\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: {key?: string|string[], fieldGroup?: any, fieldArray?: any}): (string|number)[] {\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!(<any> field)['_formlyKeyPath'] || (<any> field)['_formlyKeyPath'].key !== field.key) {\n    let keyPath: (string|number)[] = [];\n    if (field.key) {\n      /* Also allow for an array key, hence the type check  */\n      let pathElements = typeof field.key === 'string' ? field.key.split('.') : field.key;\n      for (let pathElement of pathElements) {\n        if (typeof pathElement === 'string') {\n          /* replace paths of the form names[2] by names.2, cfr. angular formly */\n          pathElement = pathElement.replace(/\\[(\\w+)\\]/g, '.$1');\n          keyPath = keyPath.concat(pathElement.split('.'));\n        } else {\n          keyPath.push(pathElement);\n        }\n      }\n      for (let i = 0; i < keyPath.length; i++) {\n        let pathElement = keyPath[i];\n        if (typeof pathElement === 'string' && /^\\d+$/.test(pathElement))  {\n          keyPath[i] = parseInt(pathElement);\n        }\n      }\n    }\n    (<any> field)['_formlyKeyPath'] = {\n      key: field.key,\n      path: keyPath,\n    };\n  }\n\n  return (<any> field)['_formlyKeyPath'].path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignModelValue(model: any, path: string | (string | number)[], value: any) {\n  if (typeof path === 'string') {\n    path = getKeyPath({key: path});\n  }\n\n  if (path.length > 1) {\n    const e = path.shift();\n    if (!model[e] || !isObject(model[e])) {\n      model[e] = typeof path[0] === 'string' ? {} : [];\n    }\n    assignModelValue(model[e], path, value);\n  } else {\n    model[path[0]] = value;\n  }\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  const paths = getKeyPath(field);\n  let model = field.parent.model;\n  while (model && paths.length > 0) {\n    const e = paths.shift();\n    model = model[e];\n  }\n\n  return model;\n}\n\nexport function getKey(controlKey: string, actualKey: string) {\n  return actualKey ? actualKey + '.' + controlKey : controlKey;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        if (isFunction(src[srcArg])) {\n          dest[srcArg] = src[srcArg];\n        } else {\n          dest[srcArg] = clone(src[srcArg]);\n        }\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2)\n    && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)\n    && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function clone(value: any): any {\n  if (!isObject(value) || value instanceof RegExp || value instanceof Observable) {\n    return value;\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (Object.prototype.toString.call(value) === '[object Date]') {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  value = Object.assign({}, value);\n  Object.keys(value).forEach(k => value[k] = clone(value[k]));\n\n  return value;\n}\n\nexport function removeFieldControl(form: FormArray | FormGroup, key: string | number) {\n  if (form instanceof FormArray) {\n    form.removeAt(key as number);\n  } else if (form instanceof FormGroup) {\n    form.removeControl(`${key}`);\n  }\n}\n","import { Injectable, InjectionToken, ComponentFactoryResolver } from '@angular/core';\nimport { ValidationErrors, FormGroup, FormArray, AbstractControl } from '@angular/forms';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge } from './../utils';\nimport { FormlyFieldConfig, FormlyFormOptions } from '../components/formly.field.config';\n\nexport const FORMLY_CONFIG = new InjectionToken<FormlyConfig>('FORMLY_CONFIG');\n\n/** @experimental */\nexport interface FormlyExtension {\n  prePopulate?(field: FormlyFieldConfig): void;\n  onPopulate?(field: FormlyFieldConfig): void;\n  postPopulate?(field: FormlyFieldConfig): void;\n}\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: string | ((error: any, field: FormlyFieldConfig) => string); } = {};\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n  extras: {\n    fieldTransform?: ((fields: FormlyFieldConfig[], model: any, form: FormGroup | FormArray, options: FormlyFormOptions) => FormlyFieldConfig[])[],\n    showError?: (field: FieldType) => boolean;\n  } = {\n    fieldTransform: undefined,\n    showError: function(field: FieldType) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || (field.field.validation && field.field.validation.show));\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach(c => this.extensions[c.name] = c.extension);\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{};\n      }\n      this.types[options.name].component = options.component;\n      this.types[options.name].name = options.name;\n      this.types[options.name].extends = options.extends;\n      this.types[options.name].defaultOptions = options.defaultOptions;\n      this.types[options.name].componentFactoryResolver = options.componentFactoryResolver;\n      if (options.wrappers) {\n        options.wrappers.forEach((wrapper) => this.setTypeWrapper(options.name, wrapper));\n      }\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] There is no type by the name of \"${name}\"`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    let name = field.type;\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] There is no type by the name of \"${name}\"`);\n    }\n\n    this.mergeExtendedType(name);\n    if (this.types[name].defaultOptions) {\n      reverseDeepMerge(field, this.types[name].defaultOptions);\n    }\n\n    let extendDefaults = this.types[name].extends && this.getType(this.types[name].extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        let defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    (<any> field).component = this.types[name].component;\n\n    if (!field.wrappers && this.types[name].wrappers) {\n      field.wrappers = [...this.types[name].wrappers];\n    }\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] There is no wrapper by the name of \"${name}\"`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = <[string]>[];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] There is no validator by the name of \"${name}\"`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: string | ((error: any, field: FormlyFieldConfig) => string)) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n  componentFactoryResolver?: ComponentFactoryResolver;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n  componentFactoryResolver?: ComponentFactoryResolver;\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n}\n\nexport interface ExtensionOption {\n  name: string;\n  extension: FormlyExtension;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  extensions?: ExtensionOption[];\n  validationMessages?: ValidationMessageOption[];\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    fieldTransform?: any,\n    showError?: (field: FieldType) => boolean;\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormArray, FormControl, AbstractControl, Validators, AbstractControlOptions } from '@angular/forms';\nimport { FormlyConfig, FieldValidatorFn, TemplateManipulators } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache, FormlyFormOptionsCache } from '../components/formly.field.config';\nimport { FORMLY_VALIDATORS, getFieldId, isObject, isNullOrUndefined, getKeyPath, assignModelValue, isUndefined, clone, removeFieldControl, getFieldValue } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  private formId = 0;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  buildForm(formControl: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    const fieldTransforms = (options && options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    (Array.isArray(fieldTransforms) ? fieldTransforms : [fieldTransforms]).forEach(fieldTransform => {\n      if (fieldTransform) {\n        fieldGroup = fieldTransform(fieldGroup, model, formControl, options);\n        if (!fieldGroup) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n\n    this._buildForm({ fieldGroup, model, formControl, options });\n    if ((<FormlyFormOptionsCache>options)._checkField) {\n      (<FormlyFormOptionsCache> options)._checkField({ fieldGroup, model, formControl, options });\n    }\n  }\n\n  private _buildForm(root: FormlyFieldConfigCache) {\n    this.formId++;\n    root.fieldGroup.forEach((field, index) => {\n      this.getExtensions().forEach(extension => extension.prePopulate && extension.prePopulate(field));\n      this.initFieldOptions(root, field, index);\n      this.getExtensions().forEach(extension => extension.onPopulate && extension.onPopulate(field));\n      this.initFieldValidation(field);\n      this.initFieldAsyncValidation(field);\n      if (field.key && field.type) {\n        const paths = getKeyPath({ key: field.key });\n        let rootForm = root.formControl as FormGroup, rootModel = field.fieldGroup ? { [paths[0]]: field.model } : field.model;\n        paths.forEach((path, index) => {\n          // FormGroup/FormArray only allow string value for path\n          const formPath = path.toString();\n          // is last item\n          if (index === paths.length - 1) {\n            this.addFormControl(rootForm, field, rootModel, formPath);\n\n          } else {\n            let nestedForm = rootForm.get(formPath) as FormGroup;\n            if (!nestedForm) {\n              nestedForm = new FormGroup({});\n              this.addControl(rootForm, formPath, nestedForm);\n            }\n            if (!rootModel[path]) {\n              rootModel[path] = typeof path === 'string' ? {} : [];\n            }\n\n            rootForm = nestedForm;\n            rootModel = rootModel[path];\n          }\n        });\n      } else if (!field.key && field.fieldGroup) {\n        field.formControl = root.formControl;\n      }\n\n      if (field.fieldGroup) {\n        this._buildForm(field);\n      }\n      this.getExtensions().forEach(extension => extension.postPopulate && extension.postPopulate(field));\n    });\n  }\n\n  private getExtensions() {\n    return Object.keys(this.formlyConfig.extensions).map(name => this.formlyConfig.extensions[name]);\n  }\n\n  private initFieldOptions(root: FormlyFieldConfigCache, field: FormlyFieldConfig, index: number) {\n    Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n    Object.defineProperty(field, 'parent', { get: () => root, configurable: true });\n    Object.defineProperty(field, 'model', {\n      get: () => field.key && field.fieldGroup ? getFieldValue(field) : root.model,\n      configurable: true,\n    });\n\n    field.id = getFieldId(`formly_${this.formId}`, field, index);\n    field.templateOptions = field.templateOptions || {};\n    field.modelOptions = field.modelOptions || {};\n    field.lifecycle = field.lifecycle || {};\n    if (field.type && field.key) {\n      field.templateOptions = Object.assign({\n        label: '',\n        placeholder: '',\n        focus: false,\n      }, field.templateOptions);\n    }\n\n    if (field.template && field.type !== 'formly-template') {\n      if (field.type) {\n        console.warn(`NgxFormly: passing 'type' property is not allowed when 'template' is set.`);\n      }\n      field.type = 'formly-template';\n    }\n\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n    }\n    if (field.key && isUndefined(field.defaultValue) && (field.fieldGroup || field.fieldArray)) {\n      field.defaultValue = field.fieldArray ? [] : {};\n    }\n\n    if (!isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n      assignModelValue(root.model, field.key, field.defaultValue);\n    }\n\n    this.initFieldWrappers(field);\n    if (field.fieldArray) {\n      this.initFieldArray(field);\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n  }\n\n  private initFieldArray(field: FormlyFieldConfigCache) {\n    field.fieldGroup = field.fieldGroup || [];\n    if (field.fieldGroup.length > field.model.length) {\n      for (let i = field.fieldGroup.length; i >= field.model.length; --i) {\n        removeFieldControl(field.formControl as FormArray, i);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < field.model.length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  private addFormControl(form: FormGroup | FormArray, field: FormlyFieldConfigCache, model: any, path: string) {\n    const abstractControlOptions = {\n      validators: field._validators,\n      asyncValidators: field._asyncValidators,\n      updateOn: field.modelOptions.updateOn,\n    } as AbstractControlOptions;\n    let control: AbstractControl;\n\n    if (field.formControl instanceof AbstractControl || form.get(path)) {\n      control = field.formControl || form.get(path);\n      if (\n        !(isNullOrUndefined(control.value) && isNullOrUndefined(model[path]))\n        && control.value !== model[path]\n        && control instanceof FormControl\n      ) {\n        control.patchValue(model[path]);\n      }\n\n      if (abstractControlOptions.validators || abstractControlOptions.asyncValidators) {\n        if (abstractControlOptions.validators) {\n          control.setValidators(abstractControlOptions.validators);\n        }\n        if (abstractControlOptions.asyncValidators) {\n          control.setAsyncValidators(abstractControlOptions.asyncValidators);\n        }\n        control.updateValueAndValidity();\n      }\n    } else if ((<any>field).component && (<any>field).component.createControl) {\n      control = (<any>field).component.createControl(model[path], field);\n    } else if (field.fieldGroup && !field.fieldArray) {\n      control = new FormGroup({}, abstractControlOptions);\n    } else if (field.fieldArray) {\n      control = new FormArray([], abstractControlOptions);\n    } else {\n      control = new FormControl(model[path], abstractControlOptions);\n    }\n\n    if (field.templateOptions.disabled) {\n      control.disable();\n    }\n\n    // Replace decorated property with a getter that returns the observable.\n    // https://github.com/angular-redux/store/blob/master/src/decorators/select.ts#L79-L85\n    if (delete field.templateOptions.disabled) {\n      Object.defineProperty(field.templateOptions, 'disabled', {\n        get: () => !field.formControl.enabled,\n        set: (value: boolean) => value ? field.formControl.disable() : field.formControl.enable(),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n\n    this.addControl(form, path, control, field);\n  }\n\n  private addControl(form: FormGroup | FormArray, key: string | number, formControl: AbstractControl, field?: FormlyFieldConfig) {\n    if (field) {\n      field.formControl = formControl;\n    }\n\n    if (form instanceof FormArray) {\n      if (form.at(<number> key) !== formControl) {\n        form.setControl(<number>key, formControl);\n      }\n    } else {\n      if (form.get(<string> key) !== formControl) {\n        form.setControl(<string>key, formControl);\n      }\n    }\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache) {\n    if (field._validators) {\n      return;\n    }\n\n    field._validators = [];\n    this.initPredefinedFieldValidation(field);\n    if (field.validators) {\n      for (const validatorName in field.validators) {\n        if (validatorName !== 'validation') {\n          let validator = field.validators[validatorName];\n          let errorPath;\n          let message;\n          if (isObject(validator)) {\n            errorPath = validator.errorPath;\n            message = validator.message;\n            validator = validator.expression;\n          }\n\n          field._validators.push((control: AbstractControl) => {\n            const isValid = validator(control, field);\n            if (errorPath && field.formControl && field.formControl.get(errorPath)) {\n              if (!isValid) {\n                field.formControl.get(errorPath).setErrors({\n                  ...(field.formControl.get(errorPath).errors || {}),\n                  [validatorName]: { message },\n                });\n              } else {\n                const errors = (field.formControl.get(errorPath).errors || {});\n                delete errors[validatorName];\n                field.formControl.get(errorPath).setErrors(Object.keys(errors).length === 0 ? null : errors);\n              }\n            }\n\n            return isValid ? null : { [validatorName]: errorPath ? { errorPath } : true };\n          });\n        } else {\n          if (!Array.isArray(field.validators.validation)) {\n            field.validators.validation = [field.validators.validation];\n          }\n          field.validators.validation\n            .forEach((validator: any) => field._validators.push(this.wrapNgValidatorFn(field, validator)));\n        }\n      }\n    }\n  }\n\n  private initFieldAsyncValidation(field: FormlyFieldConfigCache) {\n    if (field._asyncValidators) {\n      return;\n    }\n\n    field._asyncValidators = [];\n    if (field.asyncValidators) {\n      for (const validatorName in field.asyncValidators) {\n        if (validatorName !== 'validation') {\n          let validator = field.asyncValidators[validatorName];\n          if (isObject(validator)) {\n            validator = validator.expression;\n          }\n\n          field._asyncValidators.push((control: FormControl) => new Promise((resolve) => {\n            return validator(control, field).then((result: boolean) => {\n              resolve(result ? null : { [validatorName]: true });\n            });\n          }));\n        } else {\n          if (!Array.isArray(field.asyncValidators.validation)) {\n            field.asyncValidators.validation = [field.asyncValidators.validation];\n          }\n          field.asyncValidators.validation\n            .forEach((validator: any) => field._asyncValidators.push(this.wrapNgValidatorFn(field, validator) as any));\n        }\n      }\n    }\n  }\n\n  private initPredefinedFieldValidation(field: FormlyFieldConfigCache) {\n    FORMLY_VALIDATORS\n      .filter(opt => field.templateOptions.hasOwnProperty(opt) || (field.expressionProperties && field.expressionProperties[`templateOptions.${opt}`]))\n      .forEach((opt) => {\n        field._validators.push((control: AbstractControl) => {\n          const value = field.templateOptions[opt];\n          if (value === false) {\n            return null;\n          }\n          switch (opt) {\n            case 'required':\n              return Validators.required(control);\n            case 'pattern':\n              return Validators.pattern(value)(control);\n            case 'minLength':\n              return Validators.minLength(value)(control);\n            case 'maxLength':\n              return Validators.maxLength(value)(control);\n            case 'min':\n              return Validators.min(value)(control);\n            case 'max':\n              return Validators.max(value)(control);\n          }\n        });\n      });\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfig, validator: string | FieldValidatorFn) {\n    validator = typeof validator === 'string'\n    ? this.formlyConfig.getValidator(validator).validation\n    : validator;\n\n    return (control: AbstractControl) => (validator as FieldValidatorFn)(control, field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    field.wrappers = field.wrappers || [];\n    const fieldTemplateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n      ...(field.templateOptions.templateManipulators || {}),\n    };\n\n    field.wrappers = [\n      ...this.formlyConfig.templateManipulators.preWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\n      ...field.wrappers,\n      ...this.formlyConfig.templateManipulators.postWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field)),\n    ].filter((el, i, a) => el && i === a.indexOf(el));\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, SkipSelf, OnDestroy } from '@angular/core';\nimport { FormGroup, FormArray, NgForm, FormGroupDirective } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyValueChangeEvent, FormlyFormOptionsCache } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignModelValue, isNullOrUndefined, reverseDeepMerge } from '../utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      [form]=\"form\"\n      [field]=\"field\"\n      [ngClass]=\"field.className\"\n      [options]=\"options\">\n    </formly-field>\n    <ng-content></ng-content>\n  `,\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() model: any = {};\n  @Input() form: FormGroup | FormArray = new FormGroup({});\n  @Input() fields: FormlyFieldConfig[] = [];\n  @Input() options: FormlyFormOptions;\n  @Output() modelChange = new EventEmitter<any>();\n\n  /** @internal */\n  @Input() isRoot = true;\n\n  private initialModel: any;\n  private modelChangeSubs: Subscription[] = [];\n\n  private enableCheckExprDebounce = false;\n  private checkExpressionChange$ = this.modelChange.pipe(\n    debounceTime(this.enableCheckExprDebounce ? 100 : 0),\n    tap(() => {\n      this.enableCheckExprDebounce = true;\n      this.checkExpressionChange();\n      this.enableCheckExprDebounce = false;\n    }),\n  ).subscribe();\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyConfig: FormlyConfig,\n    @Optional() private parentForm: NgForm,\n    @Optional() private parentFormGroup: FormGroupDirective,\n    @Optional() @SkipSelf() private parentFormlyForm: FormlyForm,\n  ) {}\n\n  ngDoCheck() {\n    this.checkExpressionChange();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.fields || this.fields.length === 0 || !this.isRoot) {\n      return;\n    }\n\n    if (changes.fields || changes.form || changes.model) {\n      this.model = this.model || {};\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n      this.options.updateInitialValue();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearModelSubscriptions();\n    this.checkExpressionChange$.unsubscribe();\n  }\n\n  changeModel(event: { key: string, value: any }) {\n    assignModelValue(this.model, event.key, event.value);\n    this.modelChange.emit(this.model);\n  }\n\n  setOptions() {\n    this.options = this.options || {};\n\n    this.options.formState = this.options.formState || {};\n    if (!this.options.showError) {\n      this.options.showError = this.formlyConfig.extras.showError;\n    }\n    if (!this.options.fieldChanges) {\n      this.options.fieldChanges = new Subject<FormlyValueChangeEvent>();\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = (model ?: any) => {\n        model = isNullOrUndefined(model) ? this.initialModel : model;\n        if (this.model) {\n          Object.keys(this.model).forEach(k => delete this.model[k]);\n          Object.assign(this.model, model || {});\n        }\n\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n\n        // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n        // but only when the current component is a root one.\n        if (!this.parentFormlyForm && this.options.parentForm && this.options.parentForm.control === this.form) {\n          this.options.parentForm.resetForm(model);\n        } else {\n          this.form.reset(model);\n        }\n      };\n    }\n\n    if (!this.options.parentForm) {\n      this.options.parentForm = this.parentFormGroup || this.parentForm;\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = () => this.initialModel = reverseDeepMerge({}, this.model);\n    }\n\n    if (!(<FormlyFormOptionsCache> this.options)._buildForm) {\n      (<FormlyFormOptionsCache> this.options)._buildForm = () => {\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.isRoot && (<FormlyFormOptionsCache> this.options)._checkField) {\n      (<FormlyFormOptionsCache> this.options)._checkField({ fieldGroup: this.fields, model: this.model, formControl: this.form, options: this.options });\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && field.type && !field.fieldGroup) {\n        const valueChanges = field.formControl.valueChanges.pipe(\n          field.modelOptions.debounce && field.modelOptions.debounce.default\n          ? debounceTime(field.modelOptions.debounce.default)\n          : tap(() => {}),\n          map(value => {\n            if (field.parsers && field.parsers.length > 0) {\n              field.parsers.forEach(parserFn => value = parserFn(value));\n            }\n\n            return value;\n          }),\n          tap(value => this.changeModel({ key: [...rootKey, field.key].join('.'), value })),\n        );\n\n        this.modelChangeSubs.push(valueChanges.subscribe());\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, field.key] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n}\n","import {\n  Component, OnInit, OnChanges, EventEmitter, Input, Output, OnDestroy,\n  ViewContainerRef, ViewChild, ComponentRef, SimpleChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyLifeCycleFn, FormlyLifeCycleOptions } from './formly.field.config';\nimport { FieldWrapper } from '../templates/field.wrapper';\n\n@Component({\n  selector: 'formly-field',\n  template: `<ng-template #container></ng-template>`,\n  host: {\n    '[style.display]': 'field.hide ? \"none\":\"\"',\n  },\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() set model(m: any) {\n    console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() form: FormGroup;\n  @Input() field: FormlyFieldConfig;\n  @Input() options: FormlyFormOptions = {};\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  @ViewChild('container', {read: ViewContainerRef}) containerRef: ViewContainerRef;\n\n  private componentRefs: ComponentRef<FieldWrapper>[] = [];\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  ngAfterContentInit() {\n    this.lifeCycleHooks(this.lifecycle.afterContentInit);\n  }\n\n  ngAfterContentChecked() {\n    this.lifeCycleHooks(this.lifecycle.afterContentChecked);\n  }\n\n  ngAfterViewInit() {\n    this.lifeCycleHooks(this.lifecycle.afterViewInit);\n  }\n\n  ngAfterViewChecked() {\n    this.lifeCycleHooks(this.lifecycle.afterViewChecked);\n  }\n\n  ngDoCheck() {\n    this.lifeCycleHooks(this.lifecycle.doCheck);\n  }\n\n  ngOnInit() {\n    this.lifeCycleHooks(this.lifecycle.onInit);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.renderField(this.field, this.containerRef);\n    }\n\n    this.lifeCycleHooks(this.lifecycle.onChanges);\n    this.componentRefs.forEach(ref => {\n      Object.assign(ref.instance, {\n        form: this.form,\n        field: this.field,\n        options: this.options,\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.lifeCycleHooks(this.lifecycle.onDestroy);\n    this.componentRefs.forEach(componentRef => componentRef.destroy());\n    this.componentRefs = [];\n  }\n\n  private renderField(field: FormlyFieldConfig, containerRef: ViewContainerRef) {\n    this.componentRefs.forEach(componentRef => componentRef.destroy());\n    this.componentRefs = [];\n\n    const wrappers = <any>(field.wrappers || []).map(wrapperName => this.formlyConfig.getWrapper(wrapperName));\n    [...wrappers, this.formlyConfig.getType(field.type)].forEach(({ componentFactoryResolver, component }) => {\n      const ref = containerRef.createComponent<FieldWrapper>(componentFactoryResolver.resolveComponentFactory(component));\n\n      Object.assign(ref.instance, { form: this.form, options: this.options, field });\n      this.componentRefs.push(ref);\n      containerRef = ref.instance.fieldComponent;\n    });\n  }\n\n  private get lifecycle(): FormlyLifeCycleOptions {\n    return this.field.lifecycle || {};\n  }\n\n  private lifeCycleHooks(callback: FormlyLifeCycleFn) {\n    if (callback) {\n      callback(this.form, this.field, this.field.model, this.options);\n    }\n  }\n}\n","import { Directive, HostListener, ElementRef, Input, OnChanges, SimpleChanges, Renderer2 } from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '[attr.name]': 'field.name',\n    '[attr.placeholder]': 'to.placeholder',\n    '[attr.tabindex]': 'to.tabindex',\n    '[attr.readonly]': 'to.readonly',\n    '[attr.step]': 'to.step',\n\n    '(keyup)': 'to.keyup && to.keyup(field, $event)',\n    '(keydown)': 'to.keydown && to.keydown(field, $event)',\n    '(click)': 'to.click && to.click(field, $event)',\n    '(change)': 'to.change && to.change(field, $event)',\n    '(keypress)': 'to.keypress && to.keypress(field, $event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n\n  @HostListener('focus', ['$event']) onFocus($event) {\n    this.field.focus = true;\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  @HostListener('blur', ['$event']) onBlur($event) {\n    this.field.focus = false;\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  get to(): FormlyTemplateOptions {\n    return this.field.templateOptions || {};\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      const fieldChanges = changes.field;\n\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'id', this.field.id);\n      if (this.to && this.to.attributes) {\n        this.setAttributes(this.to.attributes);\n        Object.defineProperty(this.to, 'attributes', {\n          get: () => this.to.__attributes__,\n          set: attributes => this.setAttributes(attributes),\n          enumerable: true,\n          configurable: true,\n        });\n      }\n\n      if ((fieldChanges.previousValue || {}).focus !== (fieldChanges.currentValue || {}).focus && this.elementRef.nativeElement.focus) {\n        this.elementRef.nativeElement[this.field.focus ? 'focus' : 'blur']();\n      }\n    }\n  }\n\n  private setAttributes(attributes) {\n    if (this.to.__attributes__ && this.to.__attributes__ !== attributes) {\n      Object.keys(this.to.__attributes__).forEach(name => this.renderer.removeAttribute(this.elementRef.nativeElement, name));\n    }\n\n    this.to.__attributes__ = attributes;\n    Object.keys(attributes).forEach(name => this.renderer.setAttribute(\n      this.elementRef.nativeElement, name, attributes[name] as string,\n    ));\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { FormlyTemplateOptions, FormlyFieldConfig, FormlyFormOptions } from '../components/formly.field.config';\n\n export abstract class FieldType {\n  @Input() form: FormGroup;\n  @Input() field: FormlyFieldConfig;\n  @Input() options: FormlyFormOptions;\n\n  @Input()\n  get model() { return this.field.model; }\n  set model(m: any) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  get key() { return this.field.key; }\n\n  get formControl(): AbstractControl { return this.field.formControl; }\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n\n/**\n * @deprecated use `FieldType` instead\n */\nexport abstract class Field extends FieldType {\n  constructor() {\n    super();\n    console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);\n  }\n}\n","import { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\n\nexport abstract class FieldArrayType extends FieldType {\n  formControl: FormArray;\n\n  // tslint:disable-next-line\n  constructor(builder: FormlyFormBuilder) {\n    super();\n  }\n\n  add(i?: number, initialModel?: any) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n\n    (<any> this.options)._buildForm();\n  }\n\n  remove(i: number) {\n    this.model.splice(i, 1);\n\n    (<any> this.options)._buildForm();\n  }\n}\n","import { ViewContainerRef } from '@angular/core';\nimport { FieldType } from './field.type';\n\nexport abstract class FieldWrapper extends FieldType {\n  fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '../templates/field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-form\n      [fields]=\"field.fieldGroup\"\n      [isRoot]=\"false\"\n      [model]=\"field.model\"\n      [form]=\"field.formControl\"\n      [options]=\"options\"\n      [ngClass]=\"field.fieldGroupClassName\">\n      <ng-content></ng-content>\n    </formly-form>\n  `,\n})\nexport class FormlyGroup extends FieldType {}\n","import { Component, Input } from '@angular/core';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { isObject } from '../utils';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage }}`,\n})\nexport class FormlyValidationMessage {\n  @Input() field: FormlyFieldConfig;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  get errorMessage(): string {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: string | Function = this.formlyConfig.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `${expression} = expressionValue;`) as (value: any) => void;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport {\n  isObject, isNullOrUndefined, isFunction,\n  FORMLY_VALIDATORS, getFieldValue, getKeyPath, removeFieldControl,\n} from '../../utils';\nimport { evalExpression, evalStringExpression, evalExpressionValueSetter } from './utils';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { FormlyExtension } from '../../services/formly.config';\n\nexport class FieldExpressionExtension implements FormlyExtension {\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (field._expressionProperties) {\n      return;\n    }\n\n    // cache built expression\n    field._expressionProperties = field._expressionProperties || {};\n\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties) {\n        const expressionProperty = field.expressionProperties[key],\n          expressionValueSetter = evalExpressionValueSetter(\n            `field.${key}`,\n            ['expressionValue', 'model', 'field'],\n          );\n\n        if (typeof expressionProperty === 'string' || isFunction(expressionProperty)) {\n          field._expressionProperties[key] = {\n            expression: this._evalExpression(\n              expressionProperty,\n              field.parent.expressionProperties && field.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')\n                ? () => field.parent.templateOptions.disabled\n                : undefined,\n            ),\n            expressionValueSetter,\n          };\n          if (key === 'templateOptions.disabled') {\n            Object.defineProperty(field._expressionProperties[key], 'expressionValue', {\n              get: () => field.templateOptions.disabled,\n              set: () => { },\n              enumerable: true,\n              configurable: true,\n            });\n          }\n        } else if (expressionProperty instanceof Observable) {\n          const subscription = (expressionProperty as Observable<any>).pipe(\n            tap(v => evalExpression(expressionValueSetter, { field }, [v, field.model, field])),\n          ).subscribe();\n\n          const onDestroy = field.lifecycle.onDestroy;\n          field.lifecycle.onDestroy = (...args) => {\n            if (onDestroy) {\n              onDestroy(...args);\n            }\n            subscription.unsubscribe();\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression || field.parent.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n      field.hideExpression = this._evalExpression(\n        field.hideExpression,\n        field.parent && field.parent.hideExpression ? () => field.parent.hide : undefined,\n      );\n    }\n\n    if (!field.options._checkField) {\n      field.options._checkField = (f) => this._checkField(f);\n    }\n  }\n\n  private _evalExpression(expression, parentExpression?) {\n    expression = expression || (() => false);\n    if (typeof expression === 'string') {\n      expression = evalStringExpression(expression, ['model', 'formState']);\n    }\n\n    return parentExpression\n      ? (model: any, formState: any) => parentExpression() || expression(model, formState)\n      : expression;\n  }\n\n  private _checkField(field: FormlyFieldConfigCache) {\n    field.fieldGroup.forEach(f => {\n      this.checkFieldExpressionChange(f);\n      this.checkFieldVisibilityChange(f);\n\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\n        this._checkField(f);\n      }\n    });\n  }\n\n  private checkFieldExpressionChange(field: FormlyFieldConfigCache) {\n    if (!field || !field._expressionProperties) {\n      return;\n    }\n\n    const expressionProperties = field._expressionProperties;\n    const validators = FORMLY_VALIDATORS.map(v => `templateOptions.${v}`);\n\n    for (const key in expressionProperties) {\n      let expressionValue = evalExpression(expressionProperties[key].expression, { field }, [field.model, field.options.formState]);\n      if (key === 'templateOptions.disabled') {\n        expressionValue = expressionValue || false;\n      }\n\n      if (\n        expressionProperties[key].expressionValue !== expressionValue\n        && (!isObject(expressionValue) || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue))\n      ) {\n        expressionProperties[key].expressionValue = expressionValue;\n        evalExpression(\n          expressionProperties[key].expressionValueSetter,\n          { field },\n          [expressionValue, field.model, field],\n        );\n\n        if (key.indexOf('model.') === 0) {\n          const path = key.replace(/^model\\./, ''),\n            control = field.key && key === path ? field.formControl : field.parent.formControl.get(path);\n\n          if (\n            control\n            && !(isNullOrUndefined(control.value) && isNullOrUndefined(expressionValue))\n            && control.value !== expressionValue\n          ) {\n            control.patchValue(expressionValue);\n          }\n        }\n\n        if (validators.indexOf(key) !== -1 && field.formControl) {\n          field.formControl.updateValueAndValidity({ emitEvent: false });\n        }\n      }\n    }\n  }\n\n  private checkFieldVisibilityChange(field: FormlyFieldConfigCache) {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [field.model, field.options.formState],\n    );\n\n    if (hideExpressionResult !== field.hide) {\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n\n      if (field.formControl && field.key) {\n        const parent = this.fieldParentFormControl(field);\n        if (parent) {\n          const control = parent.get(`${this.fieldKey(field)}`);\n          if (hideExpressionResult === true && control) {\n            removeFieldControl(parent, this.fieldKey(field));\n          } else if (hideExpressionResult === false && !control) {\n            this.addFieldControl(parent, field);\n          }\n        }\n      }\n\n      if (field.options.fieldChanges) {\n        field.options.fieldChanges.next(<FormlyValueChangeEvent> { field: field, type: 'hidden', value: hideExpressionResult });\n      }\n    }\n  }\n\n  private addFieldControl(parent: FormArray | FormGroup, field: FormlyFieldConfig) {\n    const fieldModel = getFieldValue(field);\n    if (\n      !(isNullOrUndefined(field.formControl.value) && isNullOrUndefined(fieldModel))\n      && field.formControl.value !== fieldModel\n    ) {\n      field.formControl.patchValue(fieldModel, { emitEvent: false });\n    }\n\n    if (parent instanceof FormArray) {\n      parent.push(field.formControl);\n    } else if (parent instanceof FormGroup) {\n      parent.addControl(`${this.fieldKey(field)}`, field.formControl);\n    }\n  }\n\n  private fieldParentFormControl(field: FormlyFieldConfig): FormArray | FormGroup {\n    const paths = getKeyPath(field);\n    paths.pop(); // remove last path\n\n    return (paths.length > 0 ? field.parent.formControl.get(paths) : field.parent.formControl) as any;\n  }\n\n  private fieldKey(field: FormlyFieldConfig) {\n    return getKeyPath(field).pop();\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"field.template\"></div>`,\n})\nexport class FormlyTemplateType extends FieldType {}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Inject, Optional, ComponentFactoryResolver } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyGroup } from './components/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nexport function defaultFormlyConfig(): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [{ name: 'field-expression', extension: new FieldExpressionExtension() }],\n  };\n}\n\n@NgModule({\n  declarations: [\n    FormlyForm,\n    FormlyField,\n    FormlyAttributes,\n    FormlyGroup,\n    FormlyValidationMessage,\n    FormlyTemplateType,\n  ],\n  entryComponents: [FormlyGroup, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n      ],\n    };\n  }\n\n  constructor(\n    configService: FormlyConfig,\n    componentFactoryResolver: ComponentFactoryResolver,\n    @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = [],\n  ) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach(config => {\n      [...(config.types || []), ...(config.wrappers || [])]\n      .filter(t => !!t)\n      .forEach(t => t.componentFactoryResolver = componentFactoryResolver);\n\n      configService.addConfig(config);\n    });\n  }\n}\n"],"names":["tslib_1.__values","Observable","AbstractControl","FormArray","FormGroup","InjectionToken","Injectable","FormControl","Validators","tslib_1.__spread","EventEmitter","debounceTime","tap","Subject","map","Component","NgForm","Optional","FormGroupDirective","SkipSelf","Input","Output","ViewChild","ViewContainerRef","Directive","Renderer2","ElementRef","HostListener","tslib_1.__extends","ANALYZE_FOR_ENTRY_COMPONENTS","NgModule","CommonModule","ComponentFactoryResolver","Inject"],"mappings":"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"}
