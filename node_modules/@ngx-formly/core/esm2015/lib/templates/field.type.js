/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
/**
 * @abstract
 */
export class FieldType {
    /**
     * @return {?}
     */
    get model() { return this.field.model; }
    /**
     * @param {?} m
     * @return {?}
     */
    set model(m) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }
    /**
     * @return {?}
     */
    get key() { return this.field.key; }
    /**
     * @return {?}
     */
    get formControl() { return this.field.formControl; }
    /**
     * @return {?}
     */
    get to() { return this.field.templateOptions; }
    /**
     * @return {?}
     */
    get showError() { return this.options.showError(this); }
    /**
     * @return {?}
     */
    get id() { return this.field.id; }
    /**
     * @return {?}
     */
    get formState() { return this.options.formState || {}; }
}
FieldType.propDecorators = {
    form: [{ type: Input }],
    field: [{ type: Input }],
    options: [{ type: Input }],
    model: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FieldType.prototype.form;
    /** @type {?} */
    FieldType.prototype.field;
    /** @type {?} */
    FieldType.prototype.options;
}
/**
 * @deprecated use `FieldType` instead
 * @abstract
 */
export class Field extends FieldType {
    constructor() {
        super();
        console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQudHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtZm9ybWx5L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdGVtcGxhdGVzL2ZpZWxkLnR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdEMsT0FBTyxFQUFFLFNBQVMsRUFBbUIsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUczRCxNQUFNOzs7O0lBS0wsSUFDSSxLQUFLLEtBQUssTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUU7Ozs7O0lBQ3hDLElBQUksS0FBSyxDQUFDLENBQU0sSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLHdDQUF3QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUkseURBQXlELENBQUMsQ0FBQyxFQUFFOzs7O0lBRTNKLElBQUksR0FBRyxLQUFLLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFOzs7O0lBRXBDLElBQUksV0FBVyxLQUFzQixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsRUFBRTs7OztJQUVyRSxJQUFJLEVBQUUsS0FBNEIsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLEVBQUU7Ozs7SUFFdEUsSUFBSSxTQUFTLEtBQWMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUU7Ozs7SUFFakUsSUFBSSxFQUFFLEtBQWEsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUU7Ozs7SUFFMUMsSUFBSSxTQUFTLEtBQUssTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxJQUFJLEVBQUUsQ0FBQyxFQUFFOzs7bUJBbEJ2RCxLQUFLO29CQUNMLEtBQUs7c0JBQ0wsS0FBSztvQkFFTCxLQUFLOzs7Ozs7Ozs7Ozs7OztBQW9CUixNQUFNLFlBQXNCLFNBQVEsU0FBUztJQUMzQztRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsT0FBTyxDQUFDLElBQUksQ0FBQyxpRkFBaUYsQ0FBQyxDQUFDO0tBQ2pHO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBBYnN0cmFjdENvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGb3JtbHlUZW1wbGF0ZU9wdGlvbnMsIEZvcm1seUZpZWxkQ29uZmlnLCBGb3JtbHlGb3JtT3B0aW9ucyB9IGZyb20gJy4uL2NvbXBvbmVudHMvZm9ybWx5LmZpZWxkLmNvbmZpZyc7XG5cbiBleHBvcnQgYWJzdHJhY3QgY2xhc3MgRmllbGRUeXBlIHtcbiAgQElucHV0KCkgZm9ybTogRm9ybUdyb3VwO1xuICBASW5wdXQoKSBmaWVsZDogRm9ybWx5RmllbGRDb25maWc7XG4gIEBJbnB1dCgpIG9wdGlvbnM6IEZvcm1seUZvcm1PcHRpb25zO1xuXG4gIEBJbnB1dCgpXG4gIGdldCBtb2RlbCgpIHsgcmV0dXJuIHRoaXMuZmllbGQubW9kZWw7IH1cbiAgc2V0IG1vZGVsKG06IGFueSkgeyBjb25zb2xlLndhcm4oYE5neEZvcm1seTogcGFzc2luZyAnbW9kZWwnIGlucHV0IHRvICcke3RoaXMuY29uc3RydWN0b3IubmFtZX0nIGNvbXBvbmVudCBpcyBub3QgcmVxdWlyZWQgYW55bW9yZSwgeW91IG1heSByZW1vdmUgaXQhYCk7IH1cblxuICBnZXQga2V5KCkgeyByZXR1cm4gdGhpcy5maWVsZC5rZXk7IH1cblxuICBnZXQgZm9ybUNvbnRyb2woKTogQWJzdHJhY3RDb250cm9sIHsgcmV0dXJuIHRoaXMuZmllbGQuZm9ybUNvbnRyb2w7IH1cblxuICBnZXQgdG8oKTogRm9ybWx5VGVtcGxhdGVPcHRpb25zIHsgcmV0dXJuIHRoaXMuZmllbGQudGVtcGxhdGVPcHRpb25zOyB9XG5cbiAgZ2V0IHNob3dFcnJvcigpOiBib29sZWFuIHsgcmV0dXJuIHRoaXMub3B0aW9ucy5zaG93RXJyb3IodGhpcyk7IH1cblxuICBnZXQgaWQoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuZmllbGQuaWQ7IH1cblxuICBnZXQgZm9ybVN0YXRlKCkgeyByZXR1cm4gdGhpcy5vcHRpb25zLmZvcm1TdGF0ZSB8fCB7fTsgfVxufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBgRmllbGRUeXBlYCBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGaWVsZCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgY29uc29sZS53YXJuKGBOZ3hGb3JtbHk6ICdGaWVsZCcgaGFzIGJlZW4gcmVuYW1lZCB0byAnRmllbGRUeXBlJywgZXh0ZW5kICdGaWVsZFR5cGUnIGluc3RlYWQuYCk7XG4gIH1cbn1cbiJdfQ==