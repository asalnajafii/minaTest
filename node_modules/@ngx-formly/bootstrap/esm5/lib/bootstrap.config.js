/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { TemplateAddons } from './run/addon';
import { FormlyFieldInput, FormlyFieldCheckbox, FormlyFieldRadio, FormlyFieldSelect, FormlyFieldTextArea, FormlyFieldMultiCheckbox, } from './types/types';
import { FormlyWrapperAddons, FormlyWrapperFormField, } from './wrappers/wrappers';
/** @type {?} */
export var FIELD_TYPE_COMPONENTS = [
    FormlyFieldInput,
    FormlyFieldCheckbox,
    FormlyFieldRadio,
    FormlyFieldSelect,
    FormlyFieldTextArea,
    FormlyFieldMultiCheckbox,
    FormlyWrapperAddons,
    FormlyWrapperFormField,
];
/** @type {?} */
export var BOOTSTRAP_FORMLY_CONFIG = {
    types: [
        {
            name: 'input',
            component: FormlyFieldInput,
            wrappers: ['form-field'],
        },
        {
            name: 'checkbox',
            component: FormlyFieldCheckbox,
            wrappers: ['form-field'],
            defaultOptions: {
                templateOptions: {
                    indeterminate: true,
                    hideLabel: true,
                },
            },
        },
        {
            name: 'radio',
            component: FormlyFieldRadio,
            wrappers: ['form-field'],
            defaultOptions: {
                templateOptions: {
                    options: [],
                },
            },
        },
        {
            name: 'select',
            component: FormlyFieldSelect,
            wrappers: ['form-field'],
            defaultOptions: {
                templateOptions: {
                    options: [],
                },
            },
        },
        {
            name: 'textarea',
            component: FormlyFieldTextArea,
            wrappers: ['form-field'],
            defaultOptions: {
                templateOptions: {
                    cols: 1,
                    rows: 1,
                },
            },
        },
        {
            name: 'multicheckbox',
            component: FormlyFieldMultiCheckbox,
            wrappers: ['form-field'],
            defaultOptions: {
                templateOptions: {
                    options: [],
                },
            },
        },
    ],
    wrappers: [
        { name: 'addons', component: FormlyWrapperAddons },
        { name: 'form-field', component: FormlyWrapperFormField },
    ],
    manipulators: [
        { class: TemplateAddons, method: 'run' },
    ],
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtZm9ybWx5L2Jvb3RzdHJhcC8iLCJzb3VyY2VzIjpbImxpYi9ib290c3RyYXAuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQzdDLE9BQU8sRUFDTCxnQkFBZ0IsRUFDaEIsbUJBQW1CLEVBQ25CLGdCQUFnQixFQUNoQixpQkFBaUIsRUFDakIsbUJBQW1CLEVBQ25CLHdCQUF3QixHQUN6QixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQ0wsbUJBQW1CLEVBQ25CLHNCQUFzQixHQUN2QixNQUFNLHFCQUFxQixDQUFDOztBQUU3QixXQUFhLHFCQUFxQixHQUFHO0lBRW5DLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsd0JBQXdCO0lBR3hCLG1CQUFtQjtJQUNuQixzQkFBc0I7Q0FDdkIsQ0FBQzs7QUFFRixXQUFhLHVCQUF1QixHQUFpQjtJQUNuRCxLQUFLLEVBQUU7UUFDTDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsU0FBUyxFQUFFLGdCQUFnQjtZQUMzQixRQUFRLEVBQUUsQ0FBQyxZQUFZLENBQUM7U0FDekI7UUFDRDtZQUNFLElBQUksRUFBRSxVQUFVO1lBQ2hCLFNBQVMsRUFBRSxtQkFBbUI7WUFDOUIsUUFBUSxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3hCLGNBQWMsRUFBRTtnQkFDZCxlQUFlLEVBQUU7b0JBQ2YsYUFBYSxFQUFFLElBQUk7b0JBQ25CLFNBQVMsRUFBRSxJQUFJO2lCQUNoQjthQUNGO1NBQ0Y7UUFDRDtZQUNFLElBQUksRUFBRSxPQUFPO1lBQ2IsU0FBUyxFQUFFLGdCQUFnQjtZQUMzQixRQUFRLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDeEIsY0FBYyxFQUFFO2dCQUNkLGVBQWUsRUFBRTtvQkFDZixPQUFPLEVBQUUsRUFBRTtpQkFDWjthQUNGO1NBQ0Y7UUFDRDtZQUNFLElBQUksRUFBRSxRQUFRO1lBQ2QsU0FBUyxFQUFFLGlCQUFpQjtZQUM1QixRQUFRLEVBQUUsQ0FBQyxZQUFZLENBQUM7WUFDeEIsY0FBYyxFQUFFO2dCQUNkLGVBQWUsRUFBRTtvQkFDZixPQUFPLEVBQUUsRUFBRTtpQkFDWjthQUNGO1NBQ0Y7UUFDRDtZQUNFLElBQUksRUFBRSxVQUFVO1lBQ2hCLFNBQVMsRUFBRSxtQkFBbUI7WUFDOUIsUUFBUSxFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ3hCLGNBQWMsRUFBRTtnQkFDZCxlQUFlLEVBQUU7b0JBQ2YsSUFBSSxFQUFFLENBQUM7b0JBQ1AsSUFBSSxFQUFFLENBQUM7aUJBQ1I7YUFDRjtTQUNGO1FBQ0Q7WUFDRSxJQUFJLEVBQUUsZUFBZTtZQUNyQixTQUFTLEVBQUUsd0JBQXdCO1lBQ25DLFFBQVEsRUFBRSxDQUFDLFlBQVksQ0FBQztZQUN4QixjQUFjLEVBQUU7Z0JBQ2QsZUFBZSxFQUFFO29CQUNmLE9BQU8sRUFBRSxFQUFFO2lCQUNaO2FBQ0Y7U0FDRjtLQUNGO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsRUFBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBQztRQUNoRCxFQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsU0FBUyxFQUFFLHNCQUFzQixFQUFDO0tBQ3hEO0lBQ0QsWUFBWSxFQUFFO1FBQ1osRUFBQyxLQUFLLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUM7S0FDdkM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29uZmlnT3B0aW9uIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBUZW1wbGF0ZUFkZG9ucyB9IGZyb20gJy4vcnVuL2FkZG9uJztcbmltcG9ydCB7XG4gIEZvcm1seUZpZWxkSW5wdXQsXG4gIEZvcm1seUZpZWxkQ2hlY2tib3gsXG4gIEZvcm1seUZpZWxkUmFkaW8sXG4gIEZvcm1seUZpZWxkU2VsZWN0LFxuICBGb3JtbHlGaWVsZFRleHRBcmVhLFxuICBGb3JtbHlGaWVsZE11bHRpQ2hlY2tib3gsXG59IGZyb20gJy4vdHlwZXMvdHlwZXMnO1xuaW1wb3J0IHtcbiAgRm9ybWx5V3JhcHBlckFkZG9ucyxcbiAgRm9ybWx5V3JhcHBlckZvcm1GaWVsZCxcbn0gZnJvbSAnLi93cmFwcGVycy93cmFwcGVycyc7XG5cbmV4cG9ydCBjb25zdCBGSUVMRF9UWVBFX0NPTVBPTkVOVFMgPSBbXG4gIC8vIHR5cGVzXG4gIEZvcm1seUZpZWxkSW5wdXQsXG4gIEZvcm1seUZpZWxkQ2hlY2tib3gsXG4gIEZvcm1seUZpZWxkUmFkaW8sXG4gIEZvcm1seUZpZWxkU2VsZWN0LFxuICBGb3JtbHlGaWVsZFRleHRBcmVhLFxuICBGb3JtbHlGaWVsZE11bHRpQ2hlY2tib3gsXG5cbiAgLy8gd3JhcHBlcnNcbiAgRm9ybWx5V3JhcHBlckFkZG9ucyxcbiAgRm9ybWx5V3JhcHBlckZvcm1GaWVsZCxcbl07XG5cbmV4cG9ydCBjb25zdCBCT09UU1RSQVBfRk9STUxZX0NPTkZJRzogQ29uZmlnT3B0aW9uID0ge1xuICB0eXBlczogW1xuICAgIHtcbiAgICAgIG5hbWU6ICdpbnB1dCcsXG4gICAgICBjb21wb25lbnQ6IEZvcm1seUZpZWxkSW5wdXQsXG4gICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnY2hlY2tib3gnLFxuICAgICAgY29tcG9uZW50OiBGb3JtbHlGaWVsZENoZWNrYm94LFxuICAgICAgd3JhcHBlcnM6IFsnZm9ybS1maWVsZCddLFxuICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICAgICAgaW5kZXRlcm1pbmF0ZTogdHJ1ZSxcbiAgICAgICAgICBoaWRlTGFiZWw6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ3JhZGlvJyxcbiAgICAgIGNvbXBvbmVudDogRm9ybWx5RmllbGRSYWRpbyxcbiAgICAgIHdyYXBwZXJzOiBbJ2Zvcm0tZmllbGQnXSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgIG9wdGlvbnM6IFtdLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdzZWxlY3QnLFxuICAgICAgY29tcG9uZW50OiBGb3JtbHlGaWVsZFNlbGVjdCxcbiAgICAgIHdyYXBwZXJzOiBbJ2Zvcm0tZmllbGQnXSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgIG9wdGlvbnM6IFtdLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICd0ZXh0YXJlYScsXG4gICAgICBjb21wb25lbnQ6IEZvcm1seUZpZWxkVGV4dEFyZWEsXG4gICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgICAgICBjb2xzOiAxLFxuICAgICAgICAgIHJvd3M6IDEsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ211bHRpY2hlY2tib3gnLFxuICAgICAgY29tcG9uZW50OiBGb3JtbHlGaWVsZE11bHRpQ2hlY2tib3gsXG4gICAgICB3cmFwcGVyczogWydmb3JtLWZpZWxkJ10sXG4gICAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgICAgICBvcHRpb25zOiBbXSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgXSxcbiAgd3JhcHBlcnM6IFtcbiAgICB7bmFtZTogJ2FkZG9ucycsIGNvbXBvbmVudDogRm9ybWx5V3JhcHBlckFkZG9uc30sXG4gICAge25hbWU6ICdmb3JtLWZpZWxkJywgY29tcG9uZW50OiBGb3JtbHlXcmFwcGVyRm9ybUZpZWxkfSxcbiAgXSxcbiAgbWFuaXB1bGF0b3JzOiBbXG4gICAge2NsYXNzOiBUZW1wbGF0ZUFkZG9ucywgbWV0aG9kOiAncnVuJ30sXG4gIF0sXG59O1xuIl19