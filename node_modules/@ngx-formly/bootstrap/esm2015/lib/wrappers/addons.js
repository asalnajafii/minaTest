/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
export class FormlyWrapperAddons extends FieldWrapper {
    /**
     * @param {?} $event
     * @return {?}
     */
    addonRightClick($event) {
        if (this.to["addonRight"].onClick) {
            this.to["addonRight"].onClick(this.to, this, $event);
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    addonLeftClick($event) {
        if (this.to["addonLeft"].onClick) {
            this.to["addonLeft"].onClick(this.to, this, $event);
        }
    }
}
FormlyWrapperAddons.decorators = [
    { type: Component, args: [{
                selector: 'formly-wrapper-addons',
                template: `
    <div class="input-group">
      <div class="input-group-prepend"
        *ngIf="to.addonLeft"
        [ngStyle]="{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}"
        (click)="addonLeftClick($event)">
        <i class="input-group-text" [ngClass]="to.addonLeft.class" *ngIf="to.addonLeft.class"></i>
        <span *ngIf="to.addonLeft.text" class="input-group-text">{{ to.addonLeft.text }}</span>
      </div>
      <ng-template #fieldComponent></ng-template>
      <div class="input-group-append"
        *ngIf="to.addonRight"
        [ngStyle]="{cursor: to.addonRight.onClick ? 'pointer' : 'inherit'}"
        (click)="addonRightClick($event)">
        <i class="input-group-text" [ngClass]="to.addonRight.class" *ngIf="to.addonRight.class"></i>
        <span *ngIf="to.addonRight.text" class="input-group-text">{{ to.addonRight.text }}</span>
      </div>
    </div>
  `,
                styles: [`
    :host ::ng-deep .input-group>:not(:first-child)> .form-control {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    :host ::ng-deep .input-group>:not(:last-child)> .form-control {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  `],
            },] },
];
FormlyWrapperAddons.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
if (false) {
    /** @type {?} */
    FormlyWrapperAddons.prototype.fieldComponent;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1mb3JtbHkvYm9vdHN0cmFwLyIsInNvdXJjZXMiOlsibGliL3dyYXBwZXJzL2FkZG9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBa0NoRCxNQUFNLDBCQUEyQixTQUFRLFlBQVk7Ozs7O0lBR25ELGVBQWUsQ0FBQyxNQUFXO1FBQ3pCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLGVBQVksT0FBTyxDQUFDLENBQUMsQ0FBQztZQUMvQixJQUFJLENBQUMsRUFBRSxlQUFZLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNuRDtLQUNGOzs7OztJQUVELGNBQWMsQ0FBQyxNQUFXO1FBQ3hCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLGNBQVcsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUM5QixJQUFJLENBQUMsRUFBRSxjQUFXLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNsRDtLQUNGOzs7WUE3Q0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0JUO2dCQUNELE1BQU0sRUFBRSxDQUFDOzs7Ozs7Ozs7R0FTUixDQUFDO2FBQ0g7Ozs2QkFFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmllbGRXcmFwcGVyIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zvcm1seS13cmFwcGVyLWFkZG9ucycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiaW5wdXQtZ3JvdXAtcHJlcGVuZFwiXG4gICAgICAgICpuZ0lmPVwidG8uYWRkb25MZWZ0XCJcbiAgICAgICAgW25nU3R5bGVdPVwie2N1cnNvcjogdG8uYWRkb25MZWZ0Lm9uQ2xpY2sgPyAncG9pbnRlcicgOiAnaW5oZXJpdCd9XCJcbiAgICAgICAgKGNsaWNrKT1cImFkZG9uTGVmdENsaWNrKCRldmVudClcIj5cbiAgICAgICAgPGkgY2xhc3M9XCJpbnB1dC1ncm91cC10ZXh0XCIgW25nQ2xhc3NdPVwidG8uYWRkb25MZWZ0LmNsYXNzXCIgKm5nSWY9XCJ0by5hZGRvbkxlZnQuY2xhc3NcIj48L2k+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwidG8uYWRkb25MZWZ0LnRleHRcIiBjbGFzcz1cImlucHV0LWdyb3VwLXRleHRcIj57eyB0by5hZGRvbkxlZnQudGV4dCB9fTwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgICAgPG5nLXRlbXBsYXRlICNmaWVsZENvbXBvbmVudD48L25nLXRlbXBsYXRlPlxuICAgICAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwLWFwcGVuZFwiXG4gICAgICAgICpuZ0lmPVwidG8uYWRkb25SaWdodFwiXG4gICAgICAgIFtuZ1N0eWxlXT1cIntjdXJzb3I6IHRvLmFkZG9uUmlnaHQub25DbGljayA/ICdwb2ludGVyJyA6ICdpbmhlcml0J31cIlxuICAgICAgICAoY2xpY2spPVwiYWRkb25SaWdodENsaWNrKCRldmVudClcIj5cbiAgICAgICAgPGkgY2xhc3M9XCJpbnB1dC1ncm91cC10ZXh0XCIgW25nQ2xhc3NdPVwidG8uYWRkb25SaWdodC5jbGFzc1wiICpuZ0lmPVwidG8uYWRkb25SaWdodC5jbGFzc1wiPjwvaT5cbiAgICAgICAgPHNwYW4gKm5nSWY9XCJ0by5hZGRvblJpZ2h0LnRleHRcIiBjbGFzcz1cImlucHV0LWdyb3VwLXRleHRcIj57eyB0by5hZGRvblJpZ2h0LnRleHQgfX08L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVzOiBbYFxuICAgIDpob3N0IDo6bmctZGVlcCAuaW5wdXQtZ3JvdXA+Om5vdCg6Zmlyc3QtY2hpbGQpPiAuZm9ybS1jb250cm9sIHtcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIH1cbiAgICA6aG9zdCA6Om5nLWRlZXAgLmlucHV0LWdyb3VwPjpub3QoOmxhc3QtY2hpbGQpPiAuZm9ybS1jb250cm9sIHtcbiAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwO1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgfVxuICBgXSxcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWx5V3JhcHBlckFkZG9ucyBleHRlbmRzIEZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50Jywge3JlYWQ6IFZpZXdDb250YWluZXJSZWZ9KSBmaWVsZENvbXBvbmVudDogVmlld0NvbnRhaW5lclJlZjtcblxuICBhZGRvblJpZ2h0Q2xpY2soJGV2ZW50OiBhbnkpIHtcbiAgICBpZiAodGhpcy50by5hZGRvblJpZ2h0Lm9uQ2xpY2spIHtcbiAgICAgIHRoaXMudG8uYWRkb25SaWdodC5vbkNsaWNrKHRoaXMudG8sIHRoaXMsICRldmVudCk7XG4gICAgfVxuICB9XG5cbiAgYWRkb25MZWZ0Q2xpY2soJGV2ZW50OiBhbnkpIHtcbiAgICBpZiAodGhpcy50by5hZGRvbkxlZnQub25DbGljaykge1xuICAgICAgdGhpcy50by5hZGRvbkxlZnQub25DbGljayh0aGlzLnRvLCB0aGlzLCAkZXZlbnQpO1xuICAgIH1cbiAgfVxufVxuIl19